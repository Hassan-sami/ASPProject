@using Booking.viewModel;
@model ChangePasswordViewModel
@{
    ViewData["Title"] = "ChangePassword";
    Layout = "~/Views/Shared/_RegisterLayout.cshtml";
}

<div class="box-three">
    <form asp-action="ChangePassword" asp-controller="Account">
        <div class="text-danger" asp-validation-summary="All"></div>
        <div class="text-success col-lg-12" id="myDiv">

            @TempData["Success"]

        </div>

        <label class="l-1"  asp-for="OldPassword">Current Password</label> <br>
        <input class="text" type="password"  asp-for="OldPassword" >
        <span asp-validation-for="OldPassword" class="text-danger"></span>

        <label class="l-3"  asp-for="Password">New Password</label> <br>
        <input class="em" type="password"  asp-for="Password">
        <span asp-validation-for="Password" class="text-danger"></span>

        <label class="l-2"asp-for="ConfirmPassword">Re-type New Password</label> <br>
        <input class="pass" type="password" asp-for="ConfirmPassword">
        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>

        <input class="sub" type="submit" value="Change Password">
    </form>
</div>


@section Style {
    <link rel="stylesheet" href="/css/pass.css">
}

@section Scripts {
    <script>
        var myDiv = document.getElementById("myDiv");

        // Function to remove text after a specified time (in milliseconds)
        function removeText() {
            myDiv.innerText = ""; // Remove the text content
        }

        // Set a timeout to call the removeText function after 3 seconds (3000 milliseconds)
        setTimeout(removeText, 3000);
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}